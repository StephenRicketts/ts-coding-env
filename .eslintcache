[{"C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\index.tsx":"1","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\components\\code-editor.tsx":"2","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\components\\preview.tsx":"3","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\bundler\\index.ts":"4","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\bundler\\plugins\\unpkg-path-plugin.ts":"5","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\bundler\\plugins\\fetch-plugin.ts":"6","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\components\\code-cell.tsx":"7","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\components\\resizable.tsx":"8","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\components\\text-editor.tsx":"9","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\state\\index.ts":"10","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\state\\store.ts":"11","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\state\\reducers\\index.ts":"12","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\state\\reducers\\cellsReducer.ts":"13","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\state\\action-types\\index.ts":"14","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\components\\cell-list.tsx":"15","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\hooks\\use-typed-selector.ts":"16","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\state\\cell.ts":"17","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\components\\cell-list-item.tsx":"18","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\state\\action-creators\\index.ts":"19","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\hooks\\use-actions.ts":"20","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\components\\action-bar.tsx":"21","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\components\\add-cell.tsx":"22"},{"size":550,"mtime":1612978890542,"results":"23","hashOfConfig":"24"},{"size":1736,"mtime":1612383056671,"results":"25","hashOfConfig":"24"},{"size":1364,"mtime":1612633367118,"results":"26","hashOfConfig":"24"},{"size":865,"mtime":1612547480975,"results":"27","hashOfConfig":"24"},{"size":847,"mtime":1611765515528,"results":"28","hashOfConfig":"24"},{"size":1753,"mtime":1611850523819,"results":"29","hashOfConfig":"24"},{"size":1236,"mtime":1612905384901,"results":"30","hashOfConfig":"24"},{"size":1818,"mtime":1612386326392,"results":"31","hashOfConfig":"24"},{"size":1358,"mtime":1612974914850,"results":"32","hashOfConfig":"24"},{"size":133,"mtime":1612903416087,"results":"33","hashOfConfig":"24"},{"size":707,"mtime":1612902852492,"results":"34","hashOfConfig":"24"},{"size":234,"mtime":1612810529388,"results":"35","hashOfConfig":"24"},{"size":1883,"mtime":1612897040769,"results":"36","hashOfConfig":"24"},{"size":165,"mtime":1612806592425,"results":"37","hashOfConfig":"24"},{"size":701,"mtime":1613176827330,"results":"38","hashOfConfig":"24"},{"size":184,"mtime":1612900687977,"results":"39","hashOfConfig":"24"},{"size":125,"mtime":1612808530137,"results":"40","hashOfConfig":"24"},{"size":721,"mtime":1612981808177,"results":"41","hashOfConfig":"24"},{"size":944,"mtime":1612986041942,"results":"42","hashOfConfig":"24"},{"size":277,"mtime":1612903596981,"results":"43","hashOfConfig":"24"},{"size":913,"mtime":1612980023387,"results":"44","hashOfConfig":"24"},{"size":919,"mtime":1613176465952,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"144s0gk",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\index.tsx",[],["94","95"],"C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\components\\code-editor.tsx",[],"C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\components\\preview.tsx",[],"C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\bundler\\index.ts",[],"C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\bundler\\plugins\\unpkg-path-plugin.ts",[],"C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\bundler\\plugins\\fetch-plugin.ts",[],"C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\components\\code-cell.tsx",["96","97"],"import { useState, useEffect } from 'react';\r\nimport CodeEditor from './code-editor';\r\nimport Preview from './preview';\r\nimport bundle from '../bundler';\r\nimport Resizable from './resizable';\r\nimport { Cell } from '../state';\r\nimport { useActions } from '../hooks/use-actions'\r\n\r\ninterface CodeCellProps {\r\n  cell: Cell\r\n}\r\n\r\nconst CodeCell: React.FC<CodeCellProps> = ({ cell }) => {\r\n  const [code, setCode] = useState('');\r\n  const [err, setErr] = useState('');\r\n  const [input, setInput] = useState('');\r\n  const { updateCell } = useActions();\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(async () => {\r\n      const output = await bundle(cell.content);\r\n      setCode(output.code);\r\n      setErr(output.err);\r\n    }, 750);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    }\r\n  }, [cell.content]);\r\n\r\n \r\n\r\n  return (\r\n  <Resizable direction=\"vertical\">\r\n    <div style={{height: '100%', display: 'flex', flexDirection: 'row'}}>\r\n      <Resizable direction=\"horizontal\">\r\n         <CodeEditor \r\n         onChange={(value) => updateCell(cell.id, value)} \r\n         initialValue={cell.content} />\r\n      </Resizable>\r\n    <Preview code={code} err={err} />\r\n    </div>\r\n  </Resizable>\r\n  );\r\n};\r\n\r\n\r\nexport default CodeCell;","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\components\\resizable.tsx",[],"C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\components\\text-editor.tsx",["98","99"],"import './text-editor.css';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport MDEditor from '@uiw/react-md-editor';\r\nimport { Cell } from '../state';\r\nimport { useActions } from '../hooks/use-actions';\r\n\r\ninterface TextEditorProps {\r\n  cell: Cell;\r\n}\r\n\r\nconst TextEditor: React.FC<TextEditorProps> = ({ cell }) => {\r\n  const ref = useRef<HTMLDivElement | null>(null);\r\n  const [editing, setEditing] = useState(false);\r\n  const [value, setValue] = useState('# Header');\r\n  const { updateCell } = useActions();\r\n\r\n  useEffect(() => {\r\n    \r\n    const listener = (event: MouseEvent) => {\r\n      if (ref.current && event.target && ref.current.contains(event.target as Node)) {\r\n        return;\r\n      }\r\n      setEditing(false);\r\n    };\r\n    document.addEventListener('click', listener, { capture: true });\r\n\r\n    return () => {\r\n      document.removeEventListener('click', listener, { capture: true })\r\n    };\r\n  }, []);\r\n\r\n  if (editing) {\r\n    return (\r\n    <div className=\"text-editor\" ref={ref}>\r\n      <MDEditor value={cell.content} onChange={(v) =>  updateCell(cell.id, v || \"\")} />\r\n    </div>\r\n    )}\r\n\r\n  return <div className=\"text-editor card\" onClick={() => setEditing(true)}>\r\n    <div className=\"card-content\">\r\n    <MDEditor.Markdown source={cell.content || 'Click to edit'} />\r\n    </div>\r\n  </div>;\r\n};\r\n\r\nexport default TextEditor;","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\state\\index.ts",[],"C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\state\\store.ts",[],"C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\state\\reducers\\index.ts",[],"C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\state\\reducers\\cellsReducer.ts",[],"C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\state\\action-types\\index.ts",[],"C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\components\\cell-list.tsx",[],"C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\hooks\\use-typed-selector.ts",[],"C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\state\\cell.ts",[],"C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\components\\cell-list-item.tsx",[],"C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\state\\action-creators\\index.ts",["100"],"import {ActionType} from '../action-types';\r\nimport { Action, UpdateCellAction, DeleteCellAction, MoveCellAction, InsertCellBeforeAction, Direction } from '../actions';\r\nimport { CellTypes } from '../cell'\r\n\r\nexport const updateCell = (id: string, content: string): UpdateCellAction => {\r\n  return {\r\n    type: ActionType.UPDATE_CELL,\r\n    payload: {\r\n      id,\r\n      content\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteCell = (id: string): DeleteCellAction => {\r\n  return {\r\n    type: ActionType.DELETE_CELL,\r\n    payload: id\r\n  }\r\n};\r\n\r\nexport const moveCell = (id: string, direction: Direction): MoveCellAction => {\r\n  return {\r\n    type: ActionType.MOVE_CELL,\r\n    payload: {\r\n      id,\r\n      direction\r\n    }\r\n  }\r\n};\r\n\r\nexport const insertCellBefore = (id: string | null, cellType: CellTypes ): InsertCellBeforeAction => {\r\n  return {\r\n    type: ActionType.INSERT_CELL_BEFORE,\r\n    payload: {\r\n      id,\r\n      type: cellType\r\n    }\r\n  }\r\n};","C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\hooks\\use-actions.ts",[],"C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\components\\action-bar.tsx",[],"C:\\Users\\Steph\\OneDrive\\Desktop\\ReactProjects\\ts-coding-env\\src\\components\\add-cell.tsx",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":16,"column":10,"nodeType":"107","messageId":"108","endLine":16,"endColumn":15},{"ruleId":"105","severity":1,"message":"109","line":16,"column":17,"nodeType":"107","messageId":"108","endLine":16,"endColumn":25},{"ruleId":"105","severity":1,"message":"110","line":14,"column":10,"nodeType":"107","messageId":"108","endLine":14,"endColumn":15},{"ruleId":"105","severity":1,"message":"111","line":14,"column":17,"nodeType":"107","messageId":"108","endLine":14,"endColumn":25},{"ruleId":"105","severity":1,"message":"112","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":16},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"@typescript-eslint/no-unused-vars","'input' is assigned a value but never used.","Identifier","unusedVar","'setInput' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'Action' is defined but never used.","no-global-assign","no-unsafe-negation"]